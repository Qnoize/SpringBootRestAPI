package ru.jmentor.security.config;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.ComponentScan;import org.springframework.security.authentication.AuthenticationProvider;import org.springframework.security.config.annotation.web.builders.HttpSecurity;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;import ru.jmentor.security.filters.TokenAuthFilter;@ComponentScan("ru.jmentor")@EnableWebSecuritypublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {    private AuthenticationProvider authenticationProvider;    private TokenAuthFilter tokenAuthFilter;    @Autowired    public WebSecurityConfig(AuthenticationProvider authenticationProvider, TokenAuthFilter tokenAuthFilter){        this.authenticationProvider = authenticationProvider;        this.tokenAuthFilter = tokenAuthFilter;    }    @Override    protected void configure(HttpSecurity http) throws Exception {        http                .addFilterBefore(tokenAuthFilter, BasicAuthenticationFilter.class)                .antMatcher("/**")                .authenticationProvider(authenticationProvider)                .authorizeRequests()                .antMatchers("/admin/**").hasAuthority("ROLE_ADMIN")                .antMatchers("/userHome").authenticated()                .anyRequest().permitAll()                .and()                .logout().logoutUrl("/logout")                .logoutSuccessUrl("/").permitAll()                .and()                .exceptionHandling().accessDeniedPage("/error");        http.csrf().disable();    }}